openapi: 3.0.3
info:
  title: Maple Legal Platform
  version: 1.0.0
  description: Ontario-focused legal platform API
paths:
  /api/v1/api-tokens/:
    get:
      operationId: v1_api_tokens_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAPITokenList'
          description: ''
    post:
      operationId: v1_api_tokens_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIToken'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
  /api/v1/api-tokens/{id}/:
    get:
      operationId: v1_api_tokens_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this api token.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
    put:
      operationId: v1_api_tokens_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this api token.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIToken'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
    patch:
      operationId: v1_api_tokens_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this api token.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAPIToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAPIToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAPIToken'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
    delete:
      operationId: v1_api_tokens_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this api token.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/audit-events/:
    get:
      operationId: v1_audit_events_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditEventList'
          description: ''
  /api/v1/audit-events/{id}/:
    get:
      operationId: v1_audit_events_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this audit event.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEvent'
          description: ''
  /api/v1/auth/invite/accept/:
    post:
      operationId: v1_auth_invite_accept_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationAccept'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationAccept'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationAccept'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationAccept'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/mfa/setup/:
    post:
      operationId: v1_auth_mfa_setup_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFASetup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MFASetup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MFASetup'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASetup'
          description: ''
  /api/v1/auth/mfa/verify/:
    post:
      operationId: v1_auth_mfa_verify_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MFAVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MFAVerify'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAVerify'
          description: ''
  /api/v1/auth/refresh/:
    post:
      operationId: v1_auth_refresh_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Refresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Refresh'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
          description: ''
  /api/v1/case-rules/calc/:
    post:
      operationId: v1_case_rules_calc_create
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/client/dashboard/:
    get:
      operationId: v1_client_dashboard_retrieve
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/client/documents/:
    get:
      operationId: v1_client_documents_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientDocumentList'
          description: ''
  /api/v1/client/documents/{id}/download/:
    get:
      operationId: v1_client_documents_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDocument'
          description: ''
  /api/v1/client/invoices/:
    get:
      operationId: v1_client_invoices_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientInvoiceList'
          description: ''
  /api/v1/client/invoices/{id}/download/:
    get:
      operationId: v1_client_invoices_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInvoice'
          description: ''
  /api/v1/client/matters/:
    get:
      operationId: v1_client_matters_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientMatterList'
          description: ''
  /api/v1/client/matters/{id}/:
    get:
      operationId: v1_client_matters_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this matter.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientMatter'
          description: ''
  /api/v1/clients/:
    get:
      operationId: v1_clients_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientList'
          description: ''
    post:
      operationId: v1_clients_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/clients/{id}/:
    get:
      operationId: v1_clients_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this client.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: v1_clients_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this client.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: v1_clients_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this client.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: v1_clients_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this client.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/contracts/analyze/:
    post:
      operationId: v1_contracts_analyze_create
      description: Ontario-compliant contract analysis for legal documents.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/deadlines/:
    get:
      operationId: v1_deadlines_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: query
        name: deadline_type
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: matter__id
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
          default: medium
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          default: pending
          enum:
          - completed
          - overdue
          - pending
        description: |-
          * `pending` - Pending
          * `completed` - Completed
          * `overdue` - Overdue
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCaseDeadlineListList'
          description: ''
    post:
      operationId: v1_deadlines_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
  /api/v1/deadlines/{id}/:
    get:
      operationId: v1_deadlines_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this case deadline.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
    put:
      operationId: v1_deadlines_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this case deadline.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
    patch:
      operationId: v1_deadlines_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this case deadline.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseDeadline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseDeadline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseDeadline'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
    delete:
      operationId: v1_deadlines_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this case deadline.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/deadlines/{id}/mark_completed/:
    post:
      operationId: v1_deadlines_mark_completed_create
      description: Mark a deadline as completed.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this case deadline.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseDeadline'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
  /api/v1/deadlines/calendar/:
    get:
      operationId: v1_deadlines_calendar_retrieve
      description: Get deadlines for calendar view.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
  /api/v1/deadlines/summary/:
    get:
      operationId: v1_deadlines_summary_retrieve
      description: Get upcoming deadlines summary for dashboard widget.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDeadline'
          description: ''
  /api/v1/document-comments/:
    get:
      operationId: v1_document_comments_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentCommentList'
          description: ''
    post:
      operationId: v1_document_comments_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentComment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentComment'
          description: ''
  /api/v1/document-comments/{id}/:
    get:
      operationId: v1_document_comments_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document comment.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentComment'
          description: ''
    put:
      operationId: v1_document_comments_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document comment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentComment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentComment'
          description: ''
    patch:
      operationId: v1_document_comments_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document comment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentComment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentComment'
          description: ''
    delete:
      operationId: v1_document_comments_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document comment.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/documents/:
    get:
      operationId: v1_documents_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: v1_documents_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documents/{id}/:
    get:
      operationId: v1_documents_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: v1_documents_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: v1_documents_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: v1_documents_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/documents/{id}/download/:
    get:
      operationId: v1_documents_download_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documents/{id}/upload-version/:
    post:
      operationId: v1_documents_upload_version_create
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documents/{id}/versions/:
    get:
      operationId: v1_documents_versions_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/expenses/:
    get:
      operationId: v1_expenses_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
    post:
      operationId: v1_expenses_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/v1/expenses/{id}/:
    get:
      operationId: v1_expenses_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this expense.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: v1_expenses_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this expense.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: v1_expenses_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this expense.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: v1_expenses_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this expense.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/integrations/docusign/webhook:
    post:
      operationId: v1_integrations_docusign_webhook_create
      tags:
      - v1
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/integrations/stripe/connect:
    post:
      operationId: v1_integrations_stripe_connect_create
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invitations/:
    get:
      operationId: v1_invitations_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: v1_invitations_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/invitations/{id}/:
    get:
      operationId: v1_invitations_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: v1_invitations_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: v1_invitations_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: v1_invitations_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/invitations/{id}/resend/:
    post:
      operationId: v1_invitations_resend_create
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/invoices/:
    get:
      operationId: v1_invoices_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: v1_invoices_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/invoices/{id}/:
    get:
      operationId: v1_invoices_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: v1_invoices_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: v1_invoices_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: v1_invoices_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/invoices/{id}/download/:
    get:
      operationId: v1_invoices_download_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/invoices/{id}/mark-paid/:
    post:
      operationId: v1_invoices_mark_paid_create
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/invoices/{id}/send/:
    post:
      operationId: v1_invoices_send_create
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invoice.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/matters/:
    get:
      operationId: v1_matters_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: query
        name: client__id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: practice_area
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          default: open
          enum:
          - closed
          - open
        description: |-
          * `open` - Open
          * `closed` - Closed
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMatterList'
          description: ''
    post:
      operationId: v1_matters_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Matter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Matter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Matter'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
          description: ''
  /api/v1/matters/{id}/:
    get:
      operationId: v1_matters_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this matter.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
          description: ''
    put:
      operationId: v1_matters_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this matter.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Matter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Matter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Matter'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
          description: ''
    patch:
      operationId: v1_matters_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this matter.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMatter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMatter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMatter'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
          description: ''
    delete:
      operationId: v1_matters_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this matter.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/messages/:
    get:
      operationId: v1_messages_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: v1_messages_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/v1/messages/{id}/:
    get:
      operationId: v1_messages_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: v1_messages_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: v1_messages_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: v1_messages_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/:
    get:
      operationId: v1_notifications_list
      description: Ensure querysets are filtered by the request organization.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/notifications/{id}/read/:
    post:
      operationId: v1_notifications_read_create
      description: Mark a specific notification as read.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/mark-all-read/:
    post:
      operationId: v1_notifications_mark_all_read_create
      description: Mark all notifications as read for the current user.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/mark-type-read/:
    post:
      operationId: v1_notifications_mark_type_read_create
      description: Mark all notifications of a specific type as read.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/stats/:
    get:
      operationId: v1_notifications_stats_retrieve
      description: Get notification statistics for the current user.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/org/{id}/:
    get:
      operationId: v1_org_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: v1_org_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: v1_org_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/payments/:
    get:
      operationId: v1_payments_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: v1_payments_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: v1_payments_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: v1_payments_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: v1_payments_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: v1_payments_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reports/billing-summary/:
    get:
      operationId: v1_reports_billing_summary_retrieve
      description: Provide aggregate billing metrics for dashboards.
      tags:
      - v1
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/roles/:
    get:
      operationId: v1_roles_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: v1_roles_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/v1/roles/{id}/:
    get:
      operationId: v1_roles_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: v1_roles_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: v1_roles_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: v1_roles_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this role.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/settings/:
    get:
      operationId: v1_settings_retrieve
      description: Expose feature flags and compliance metadata.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/share-links/:
    get:
      operationId: v1_share_links_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShareLinkList'
          description: ''
    post:
      operationId: v1_share_links_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShareLink'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLink'
          description: ''
  /api/v1/share-links/{id}/:
    get:
      operationId: v1_share_links_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this share link.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLink'
          description: ''
    put:
      operationId: v1_share_links_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this share link.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShareLink'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLink'
          description: ''
    patch:
      operationId: v1_share_links_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this share link.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShareLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShareLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShareLink'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLink'
          description: ''
    delete:
      operationId: v1_share_links_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this share link.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/share-links/resolve/{token}/:
    get:
      operationId: v1_share_links_resolve_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/threads/:
    get:
      operationId: v1_threads_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageThreadList'
          description: ''
    post:
      operationId: v1_threads_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageThread'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThread'
          description: ''
  /api/v1/threads/{id}/:
    get:
      operationId: v1_threads_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message thread.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThread'
          description: ''
    put:
      operationId: v1_threads_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message thread.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageThread'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThread'
          description: ''
    patch:
      operationId: v1_threads_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message thread.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageThread'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThread'
          description: ''
    delete:
      operationId: v1_threads_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message thread.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/time-entries/:
    get:
      operationId: v1_time_entries_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeEntryList'
          description: ''
    post:
      operationId: v1_time_entries_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeEntry'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntry'
          description: ''
  /api/v1/time-entries/{id}/:
    get:
      operationId: v1_time_entries_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time entry.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntry'
          description: ''
    put:
      operationId: v1_time_entries_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time entry.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeEntry'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntry'
          description: ''
    patch:
      operationId: v1_time_entries_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time entry.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntry'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntry'
          description: ''
    delete:
      operationId: v1_time_entries_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time entry.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: v1_users_list
      description: Generic viewset enforcing org scoping.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users_create
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_partial_update
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      description: Generic viewset enforcing org scoping.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: v1_users_me_retrieve
      description: Generic viewset enforcing org scoping.
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    APIToken:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        scopes:
          type: array
          items:
            type: string
            maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    ActorTypeEnum:
      enum:
      - user
      - client
      - system
      type: string
      description: |-
        * `user` - User
        * `client` - Client
        * `system` - System
    AuditEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        actor_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        actor_type:
          allOf:
          - $ref: '#/components/schemas/ActorTypeEnum'
          readOnly: true
        action:
          type: string
          readOnly: true
        resource_type:
          type: string
          readOnly: true
        resource_id:
          type: string
          readOnly: true
        ip:
          type: string
          readOnly: true
          nullable: true
        user_agent:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        metadata:
          readOnly: true
      required:
      - action
      - actor_id
      - actor_type
      - created_at
      - id
      - ip
      - metadata
      - organization
      - resource_id
      - resource_type
      - user_agent
    CaseDeadline:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        deadline_type:
          type: string
          maxLength: 120
        due_date:
          type: string
          format: date-time
        rule_reference:
          type: string
          maxLength: 120
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          default: medium
        status:
          allOf:
          - $ref: '#/components/schemas/Status370Enum'
          default: pending
        matter:
          allOf:
          - $ref: '#/components/schemas/Matter'
          readOnly: true
        matter_id:
          type: string
          format: uuid
          writeOnly: true
        created_by:
          type: string
          readOnly: true
        notifications_sent:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - deadline_type
      - due_date
      - id
      - matter
      - matter_id
      - notifications_sent
      - title
      - updated_at
    CaseDeadlineList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        deadline_type:
          type: string
          maxLength: 120
        due_date:
          type: string
          format: date-time
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          default: medium
        status:
          allOf:
          - $ref: '#/components/schemas/Status370Enum'
          default: pending
        matter_id:
          type: string
          format: uuid
          readOnly: true
        matter_title:
          type: string
          readOnly: true
        matter_reference:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - deadline_type
      - due_date
      - id
      - matter_id
      - matter_reference
      - matter_title
      - title
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        primary_email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 30
        address:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        portal_user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - created_at
      - display_name
      - id
      - portal_user
      - primary_email
      - updated_at
    ClientDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          readOnly: true
        mime:
          type: string
          readOnly: true
        size:
          type: integer
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        client_visible:
          type: boolean
          readOnly: true
      required:
      - client_visible
      - filename
      - id
      - matter
      - mime
      - size
      - uploaded_at
    ClientInvoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          readOnly: true
        issue_date:
          type: string
          format: date
          readOnly: true
        due_date:
          type: string
          format: date
          readOnly: true
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          readOnly: true
        matter_title:
          type: string
          readOnly: true
      required:
      - due_date
      - id
      - issue_date
      - matter_title
      - number
      - status
      - total
    ClientMatter:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          readOnly: true
        practice_area:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCa5Enum'
          readOnly: true
        opened_at:
          type: string
          format: date
          readOnly: true
        closed_at:
          type: string
          format: date
          readOnly: true
          nullable: true
        reference_code:
          type: string
          readOnly: true
        client_name:
          type: string
          readOnly: true
        lead_lawyer_name:
          type: string
          nullable: true
          readOnly: true
      required:
      - client_name
      - closed_at
      - id
      - lead_lawyer_name
      - opened_at
      - practice_area
      - reference_code
      - status
      - title
    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        owner:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          maxLength: 255
        mime:
          type: string
          maxLength: 120
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        s3_key:
          type: string
          readOnly: true
        sha256:
          type: string
          maxLength: 64
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        client_visible:
          type: boolean
          default: false
        version:
          type: integer
          readOnly: true
        presigned_upload:
          type: string
          readOnly: true
        scan_status:
          type: string
          readOnly: true
        scan_message:
          type: string
          readOnly: true
      required:
      - filename
      - id
      - matter
      - mime
      - owner
      - presigned_upload
      - s3_key
      - scan_message
      - scan_status
      - sha256
      - size
      - uploaded_at
      - version
    DocumentComment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
          writeOnly: true
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        author_name:
          type: string
          readOnly: true
      required:
      - author
      - author_name
      - body
      - created_at
      - document
      - id
    Expense:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        tax_code:
          type: string
          maxLength: 32
        receipt_file:
          type: string
          maxLength: 512
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - date
      - description
      - id
      - matter
      - updated_at
    Invitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        role:
          type: string
          format: uuid
        client:
          type: string
          format: uuid
          nullable: true
        token:
          type: string
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/InvitationStatusEnum'
          readOnly: true
        accepted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        organization:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        metadata: {}
      required:
      - accepted_at
      - created_at
      - email
      - expires_at
      - id
      - organization
      - role
      - status
      - token
    InvitationAccept:
      type: object
      properties:
        token:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - first_name
      - last_name
      - password
      - token
    InvitationStatusEnum:
      enum:
      - pending
      - accepted
      - expired
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `expired` - Expired
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        number:
          type: string
          maxLength: 32
        issue_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          default: draft
        pdf_file:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - due_date
      - id
      - issue_date
      - matter
      - number
      - pdf_file
      - subtotal
      - tax_total
      - total
      - updated_at
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        otp:
          type: string
      required:
      - email
      - password
    MFASetup:
      type: object
      properties:
        secret:
          type: string
          readOnly: true
        qr_uri:
          type: string
          readOnly: true
      required:
      - qr_uri
      - secret
    MFAVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Matter:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        practice_area:
          type: string
          maxLength: 120
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCa5Enum'
          default: open
        opened_at:
          type: string
          format: date
        closed_at:
          type: string
          format: date
          nullable: true
        reference_code:
          type: string
          maxLength: 64
        lead_lawyer:
          type: string
          format: uuid
          nullable: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        client_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - client
      - client_id
      - created_at
      - id
      - opened_at
      - practice_area
      - title
      - updated_at
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        thread:
          type: string
          format: uuid
        sender_user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        sender_client:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        body:
          type: string
        attachments:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - created_at
      - id
      - sender_client
      - sender_user
      - thread
    MessageThread:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - matter
    MethodEnum:
      enum:
      - stripe
      - interac
      - manual
      type: string
      description: |-
        * `stripe` - Stripe
        * `interac` - Interac e-Transfer
        * `manual` - Manual
    NameEnum:
      enum:
      - Owner
      - Admin
      - Lawyer
      - Paralegal
      - Assistant
      - Client
      type: string
      description: |-
        * `Owner` - Owner
        * `Admin` - Admin
        * `Lawyer` - Lawyer
        * `Paralegal` - Paralegal
        * `Assistant` - Assistant
        * `Client` - Client
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        notification_type:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        body:
          type: string
          readOnly: true
        metadata:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        related_object_type:
          type: string
          readOnly: true
        related_object_id:
          type: string
          readOnly: true
      required:
      - body
      - created_at
      - id
      - metadata
      - notification_type
      - read_at
      - related_object_id
      - related_object_type
      - title
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        region:
          type: string
          default: 'ON'
          maxLength: 64
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    PaginatedAPITokenList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/APIToken'
    PaginatedAuditEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
    PaginatedCaseDeadlineListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CaseDeadlineList'
    PaginatedClientDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientDocument'
    PaginatedClientInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientInvoice'
    PaginatedClientList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Client'
    PaginatedClientMatterList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientMatter'
    PaginatedDocumentCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentComment'
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedExpenseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
    PaginatedInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    PaginatedInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedMatterList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Matter'
    PaginatedMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedMessageThreadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MessageThread'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedShareLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShareLink'
    PaginatedTimeEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntry'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAPIToken:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        scopes:
          type: array
          items:
            type: string
            maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCaseDeadline:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        deadline_type:
          type: string
          maxLength: 120
        due_date:
          type: string
          format: date-time
        rule_reference:
          type: string
          maxLength: 120
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          default: medium
        status:
          allOf:
          - $ref: '#/components/schemas/Status370Enum'
          default: pending
        matter:
          allOf:
          - $ref: '#/components/schemas/Matter'
          readOnly: true
        matter_id:
          type: string
          format: uuid
          writeOnly: true
        created_by:
          type: string
          readOnly: true
        notifications_sent:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedClient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        primary_email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 30
        address:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        portal_user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
    PatchedDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        owner:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          maxLength: 255
        mime:
          type: string
          maxLength: 120
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        s3_key:
          type: string
          readOnly: true
        sha256:
          type: string
          maxLength: 64
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        client_visible:
          type: boolean
          default: false
        version:
          type: integer
          readOnly: true
        presigned_upload:
          type: string
          readOnly: true
        scan_status:
          type: string
          readOnly: true
        scan_message:
          type: string
          readOnly: true
    PatchedDocumentComment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
          writeOnly: true
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        author_name:
          type: string
          readOnly: true
    PatchedExpense:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        tax_code:
          type: string
          maxLength: 32
        receipt_file:
          type: string
          maxLength: 512
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedInvitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        role:
          type: string
          format: uuid
        client:
          type: string
          format: uuid
          nullable: true
        token:
          type: string
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/InvitationStatusEnum'
          readOnly: true
        accepted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        organization:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        metadata: {}
    PatchedInvoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        number:
          type: string
          maxLength: 32
        issue_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          default: draft
        pdf_file:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMatter:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        practice_area:
          type: string
          maxLength: 120
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCa5Enum'
          default: open
        opened_at:
          type: string
          format: date
        closed_at:
          type: string
          format: date
          nullable: true
        reference_code:
          type: string
          maxLength: 64
        lead_lawyer:
          type: string
          format: uuid
          nullable: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        client_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        thread:
          type: string
          format: uuid
        sender_user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        sender_client:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        body:
          type: string
        attachments:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMessageThread:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        region:
          type: string
          default: 'ON'
          maxLength: 64
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPayment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        invoice:
          type: string
          format: uuid
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        method:
          $ref: '#/components/schemas/MethodEnum'
        external_ref:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRole:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
        organization:
          type: string
          format: uuid
          readOnly: true
    PatchedShareLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
        token:
          type: string
          readOnly: true
        expires_at:
          type: string
          format: date-time
        one_time:
          type: boolean
          default: false
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTimeEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        description:
          type: string
        minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
        rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        billable:
          type: boolean
          default: true
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          default: manual
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          default: true
        is_staff:
          type: boolean
          readOnly: true
        mfa_enabled:
          type: boolean
          default: false
        mfa_required:
          type: boolean
          readOnly: true
        last_login_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        roles:
          type: array
          items:
            type: string
          readOnly: true
    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        invoice:
          type: string
          format: uuid
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        method:
          $ref: '#/components/schemas/MethodEnum'
        external_ref:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - date
      - id
      - invoice
      - method
      - updated_at
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    Refresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
        organization:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - name
      - organization
    ShareLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
        token:
          type: string
          readOnly: true
        expires_at:
          type: string
          format: date-time
        one_time:
          type: boolean
          default: false
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - document
      - expires_at
      - id
      - organization
      - token
    SourceEnum:
      enum:
      - email
      - doc
      - call
      - manual
      type: string
      description: |-
        * `email` - Email
        * `doc` - Document
        * `call` - Phone Call
        * `manual` - Manual
    Status370Enum:
      enum:
      - pending
      - completed
      - overdue
      type: string
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `overdue` - Overdue
    StatusB9bEnum:
      enum:
      - draft
      - sent
      - paid
      - overdue
      type: string
      description: |-
        * `draft` - Draft
        * `sent` - Sent
        * `paid` - Paid
        * `overdue` - Overdue
    StatusCa5Enum:
      enum:
      - open
      - closed
      type: string
      description: |-
        * `open` - Open
        * `closed` - Closed
    TimeEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        matter:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        description:
          type: string
        minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
        rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        billable:
          type: boolean
          default: true
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          default: manual
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - description
      - id
      - matter
      - minutes
      - rate
      - updated_at
      - user
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          default: true
        is_staff:
          type: boolean
          readOnly: true
        mfa_enabled:
          type: boolean
          default: false
        mfa_required:
          type: boolean
          readOnly: true
        last_login_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        organization:
          type: string
          format: uuid
          readOnly: true
        roles:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - created_at
      - email
      - first_name
      - id
      - is_staff
      - last_login_at
      - last_name
      - mfa_required
      - organization
      - roles
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
